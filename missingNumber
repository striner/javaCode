https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/submissions/

剑指 Offer 53 - II. 0～n-1中缺失的数字
一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。

示例 1:
输入: [0,1,3]
输出: 2

示例 2:
输入: [0,1,2,3,4,5,6,7,9]
输出: 8
 
限制：
1 <= 数组长度 <= 10000

解法1：直接遍历
class Solution {
    public int missingNumber(int[] nums) {
        
        for(int i = 0; i < nums.length; i++) {
            if(i != nums[i]) return i;
        }
        return nums.length;
    }
}
执行结果： 通过
执行用时： 0 ms , 在所有 Java 提交中击败了 100.00% 的用户
内存消耗： 39 MB , 在所有 Java 提交中击败了 30.06% 的用户

解法2：二分查找
class Solution {
    public int missingNumber(int[] nums) {
        
        if(nums[0] != 0) return 0;
        return missingNumber(nums, 0, nums.length-1);
    }

    public int missingNumber(int[] nums, int start, int end) {

        if(start == end) {
            if(end == nums[end]) return nums.length;
            return end;
        }

        int mid = (start + end)/2;
        if(nums[mid] != mid) return missingNumber(nums, start, mid);
        return missingNumber(nums, mid+1, end);
    }
}
执行结果： 通过
执行用时： 0 ms , 在所有 Java 提交中击败了 100.00% 的用户
内存消耗： 39.2 MB , 在所有 Java 提交中击败了 5.09% 的用户
