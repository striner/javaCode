package com.striner.java.leetcode.test01;

public class LongestPalindrome5 {

    //5. 最长回文子串
    //给你一个字符串 s，找到 s 中最长的回文子串。
    //
    //
    //
    //示例 1：
    //
    //输入：s = "babsaaaaaa ad"
    //输出："bab"
    //解释："aba" 同样是符合题意的答案。
    //示例 2：
    //
    //输入：s = "cbbd"
    //输出："bb"
    //示例 3：
    //
    //输入：s = "a"
    //输出："a"
    //示例 4：
    //
    //输入：s = "ac"
    //输出："a"
    //
    //
    //提示：
    //
    //1 <= s.length <= 1000
    //s 仅由数字和英文字母（大写和/或小写）组成
    //https://leetcode-cn.com/problems/longest-palindromic-substring/
    public static void main(String[] args) {

        String s = "babad";
        LongestPalindrome5 longestPalindrome = new LongestPalindrome5();
        System.out.println(longestPalindrome.longestPalindrome(s));
    }

    private int maxLen = 0;
    private int index = 0;
    public String longestPalindrome(String s) {

        if (s.length() <= 1) return s;
        int len = s.length();

        for (int i = 0; i < len-1; i++) {

            findStr(s, i, i, len);
            findStr(s, i, i + 1, len);

        }

        return s.substring(index, index + maxLen);
    }

    public void findStr(String s, int l, int r, int len) {


        while (l >= 0 && r < len && s.charAt(l) == s.charAt(r)) {
            l--;
            r++;
        }


        int sl = r - l - 1;
        if (sl > maxLen) {
            maxLen = sl;
            index = l+1;
        }

    }
}

//执行结果： 通过
//
//执行用时： 21 ms , 在所有 Java 提交中击败了 89.44% 的用户
//内存消耗： 38.5 MB , 在所有 Java 提交中击败了 77.64% 的用户
