import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.TreeMap;

/*获取text.txt文本上每个字符出现的次数,将结果写在numberOfCharacter.txt上
 * 1.创建带缓冲的输入流对象
 * 2.创建双列集合对象TreeMap
 * 3.将读到的字符存储在双列集合中,存储时若不包含这个键,就将这个键和1存储,如果包含这个键,就将该键和值加1进行存储
 * 4.关闭输入流
 * 5.创建输出流对象
 * 6.遍历集合将集合中的内容写到numberOfCharacter.txt文件中
 * 7.关闭输出流
 */
public class StatisticsOfChar {   
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("text.txt"));
		
		TreeMap<Character, Integer> tm = new TreeMap<>();
		
		int ch;
		while ((ch = br.read()) != -1) {
			char c = (char)ch;
			/*if (tm.containsKey(c)) {
				tm.put(c, 1);
			}else{
				tm.put(c, tm.get(c) + 1);
			}*/
			tm.put(c, tm.containsKey(c) ? tm.get(c)+1 : 1);
		}
		br.close();
		
		BufferedWriter bw = new BufferedWriter(new FileWriter("numberOfCharacter.txt"));
		for (Character key : tm.keySet()) {
			switch (key) {
			case '\t':
				bw.write("\\t" + ":" + tm.get(key));  //写出键和值
				break;
			case '\n':
				bw.write("\\n" + ":" + tm.get(key));  
				break;
			case '\r':
				bw.write("\\r" + ":" + tm.get(key));  
				break;
			case ' ':
				bw.write("空格" + ":" + tm.get(key));  
				break;
			default:
				bw.write(key + ":" + tm.get(key));
				break;
			}
			bw.newLine();
		}
		bw.close();
	}
}
