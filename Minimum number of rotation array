/**
 * 
	旋转数组的最小数字
	时间限制：3秒 空间限制：32768K 热度指数：269374
	本题知识点： 查找
	
	题目描述
	把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 
	例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

 * @author striner
 *
 */
public class Solution {
	
    public static int minNumberInRotateArray(int [] array) {
    	
    	int len = array.length;
    	if (len == 0) {
    		return 0;
    	}
    	
    	int low = 0;
    	int high = len - 1;
    	int mid = (low + high)/2;
    	int min = array[low];
    	if (array[low] < array[high]) {     //说明已经是一个非递减数组
    		min = array[low];
    	}
    	
    	
    	//使用二分查找法   3 4 5 1 2 
    	while (array[low] >= array[high]) {
    
    		if (high - low == 1) {
    			return array[high];
    		}
    		
    		if (array[low] <= array[mid]) {    //说明数组 array[low] -> array[mid] 部分升序
    			low = mid;
    			mid = (mid + high)/2;
    		}
    		
    		if (array[low] > array[mid]) {    //说明数组 array[low] -> array[mid] 中出现旋转点
    			high = mid;
    			mid = (mid + low)/2;
    		}
    		
    		if (array[low] == array[mid] && array[mid] == array[high]) {   //当array[low] == array[mid] == array[high]时只能线性搜索
    			for (int i : array) {
					min = min < i ? min : i;
				}
    			
    			return min;
    		}
    	}
    	return min;
    }
    
    
    public static void main(String[] args) {
		
    	int[] array = new int[]{3,4,5,1,2};
		
		int min = minNumberInRotateArray(array);
		System.out.println(min);
	}
}
