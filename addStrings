package com.striner.java.test03;

public class AddStrings415 {
    //415. 字符串相加
    //给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和。
    //
    //提示：
    //num1 和num2 的长度都小于 5100
    //num1 和num2 都只包含数字 0-9
    //num1 和num2 都不包含任何前导零
    //你不能使用任何內建 BigInteger 库， 也不能直接将输入的字符串转换为整数形式
    //
    // https://leetcode-cn.com/problems/add-strings/
    public static void main(String[] args) {

        AddStrings415 addStrings = new AddStrings415();
        System.out.println(addStrings.addStrings("18582506933032752", "366213329703"));
    }

    public String addStrings(String num1, String num2) {

        if (num1.equals("0")) return num2;
        if (num2.equals("0")) return num1;

        StringBuilder sumStr = new StringBuilder();
        int carry = 0;
        int i = num1.length() - 1;
        int j = num2.length() - 1;
        while (i >= 0 || j >= 0) {

            int n1 = i >= 0 ? num1.charAt(i) - '0' : 0;
            int n2 = j >= 0 ? num2.charAt(j) - '0' : 0;

            int temp = n1 + n2 + carry;
            carry = temp / 10;
            sumStr.append(temp % 10);
            i--;
            j--;
        }

        if (carry == 1) sumStr.append(1);
        return sumStr.reverse().toString();
    }
    //执行结果： 通过
    //执行用时： 3 ms , 在所有 Java 提交中击败了 65.45% 的用户
    //内存消耗： 38.4 MB , 在所有 Java 提交中击败了 80.55% 的用户
}
