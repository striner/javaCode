package com.striner.java.jzOffer;

public class ReverseList24 {

    //剑指 Offer 24. 反转链表
    //定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。
    //
    // 
    //
    //示例:
    //
    //输入: 1->2->3->4->5->NULL
    //输出: 5->4->3->2->1->NULL
    // 
    //
    //限制：
    //
    //0 <= 节点个数 <= 5000
    //
    // 
    //https://leetcode-cn.com/problems/fan-zhuan-lian-biao-lcof/submissions/
    public static void main(String[] args) {

    }

    public ListNode24 reverseList(ListNode24 head) {

        if(head == null) return null;

        // head == ListNode cur
        ListNode24 pre = null;
        ListNode24 next = head.next;

        while(head != null) {

            head.next = pre;
            pre = head;
            head = next;
            if(next != null) {
                next = next.next;
            }
        }

        return pre;
    }
}
class ListNode24 {
    int val;
    ListNode24 next;
    ListNode24(int x) { val = x; }
}
//执行结果： 通过
//执行用时： 0 ms , 在所有 Java 提交中击败了 100.00% 的用户
//内存消耗： 38.2 MB , 在所有 Java 提交中击败了 48.52% 的用户
