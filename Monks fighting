//组合博弈论 高僧斗法   
//无偏游戏均可转化为尼姆堆
//制造镜像环境 镜像操作 
//偶数:1,2,3,4   1,2分为一组   3,4分为一组  
//奇数:去掉最上层小和尚(废棋) 如 1,5,9  第一步将1跳至4,必赢
public class Main {
	public static void main(String[] args) {
	
		solve(new int[]{1, 5, 9});  //3  1 --> 4
		solve(new int[]{1, 5, 8, 10});   //3, 1    1 --> 3 然后镜像操作,保持差值不变
		solve(new int[]{1, 4, 8, 12, 16, 19, 28, 33, 35, 36, 40, 45, 52, 66, 67, 68, 85, 99, 102, 134, 155, 211, 214, 216, 355, 376, 400, 412});
	
	}

	public static void solve(int[] x) {
		
		for (int i = 0; i < x.length - 1; i++) {
			for (int k = x[i] + 1; k < x[i + 1]; k++) {
				int old = x[i];
				try {
					x[i] = k;   //试探
					if(fun(x) == false) { 
						System.out.println(old + " --> " + k);   //将位于x[i]位置的小和尚移至k位置
						return;
					}
				}
				finally {
					x[i] = old;    //回溯
				}
			}
		}
	}

	public static boolean fun(int[] x) {

		int sum = 0;
		for (int i = 0; i < x.length - 1; i += 2) {
			sum ^= x[i + 1] - x[i] - 1;   //相邻两人之间所隔的空台阶
		}
		return sum != 0;   //sum == 0则false 表无步可走
	}
}
