package com.striner.java.jzOffer;

public class ReverseLeftWords58 {


    //剑指 Offer 58 - II. 左旋转字符串
    //字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串"abcdefg"和数字2，该函数将返回左旋转两位得到的结果"cdefgab"。
    //
    // 
    //
    //示例 1：
    //
    //输入: s = "abcdefg", k = 2
    //输出: "cdefgab"
    //示例 2：
    //
    //输入: s = "lrloseumgh", k = 6
    //输出: "umghlrlose"
    // 
    //
    //限制：
    //
    //1 <= k < s.length <= 10000
    //https://leetcode-cn.com/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/
    public static void main(String[] args) {

    }

    // 方法1：用数组原地反转，直接用java的substring()没有技术含量
    //执行结果： 通过
    //执行用时： 2 ms , 在所有 Java 提交中击败了 51.28% 的用户
    //内存消耗： 38.1 MB , 在所有 Java 提交中击败了 77.50% 的用户
    public String reverseLeftWords(String s, int n) {
        char[] chars = s.toCharArray();

        // 两段各自翻转
        reverse(chars, 0, n - 1);
        reverse(chars, n, chars.length - 1);

        // 整体翻转
        reverse(chars, 0, chars.length - 1);
        return String.valueOf(chars);
    }

    public void reverse(char[] chars, int start, int end) {

        while (start < end) {
            char temp = chars[start];
            chars[start] = chars[end];
            chars[end] = temp;
            start++;
            end--;
        }
    }

    // 方法2：
    //执行结果： 通过
    //执行用时： 0 ms , 在所有 Java 提交中击败了 100.00% 的用户
    //内存消耗： 38.1 MB , 在所有 Java 提交中击败了 63.41% 的用户
    public String reverseLeftWords2(String s, int n) {
        String s1 = s.substring(0, n);
        String s2 = s.substring(n);
        return s2 + s1;
    }
}
